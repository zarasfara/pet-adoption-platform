definitions:
  http.signIn.signInInput:
    properties:
      email:
        format: email
        type: string
      password:
        format: password
        type: string
    required:
    - email
    - password
    type: object
  http.tokenResponse:
    properties:
      accessToken:
        type: string
    type: object
  httputil.HTTPError:
    properties:
      error:
        type: string
    type: object
  models.AddRecordUser:
    properties:
      email:
        example: test@gmail.com
        type: string
      name:
        example: Eugene
        type: string
      password:
        example: password
        type: string
      preferences:
        example: some text about my preferences
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Pet:
    properties:
      age:
        type: integer
      breedId:
        type: string
      description:
        type: string
      isAvailable:
        type: boolean
      name:
        type: string
      shelterName:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        example: test@gmail.com
        type: string
      name:
        example: Eugene
        type: string
      preferences:
        example: some text about my preferences
        type: string
      updatedAt:
        type: string
    required:
    - email
    - name
    type: object
host: localhost:12001
info:
  contact:
    email: oev2001@gmail.com
  title: Pet adoption platform api
  version: "1.0"
paths:
  /api/v1/pets:
    get:
      description: Retrieves all pets
      parameters:
      - description: Sort field
        in: query
        name: sortField
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Pet'
            type: array
        "404":
          description: Not Found
          schema:
            items:
              $ref: '#/definitions/models.Pet'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get all pets
      tags:
      - pets
  /auth/current-user:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Текущий пользователь
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Получить текущего пользователя
      tags:
      - auth
  /auth/refresh-tokens:
    post:
      consumes:
      - application/json
      description: Обновляет пару токенов (access и refresh) на основе предоставленного
        access токена.
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает новую пару токенов
          schema:
            $ref: '#/definitions/http.tokenResponse'
        "400":
          description: Не удалось обновить токены
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Обновление пары токенов
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: Аутентификация пользователя
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/http.signIn.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Аутентификация
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      - application/json
      parameters:
      - description: Регистрация пользователя
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.AddRecordUser'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Регистрация
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
